{"version":3,"file":"Feedback-aGh6BX-M.js","sources":["../../src/pages/Feedback.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport client from '../api/client';\n\ninterface FeedbackItem {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  screenshot_url?: string;\n  created_at: string;\n  user: {\n    username: string;\n  };\n}\n\ninterface FeedbackForm {\n  title: string;\n  description: string;\n  category: string;\n  screenshot?: File;\n}\n\nconst categories = [\n  'Bug Report',\n  'Feature Request',\n  'User Experience',\n  'Performance Issue',\n  'Other'\n];\n\nconst Feedback: React.FC = () => {\n  const [sort, setSort] = useState<'new' | 'top'>('new');\n  const [form, setForm] = useState<FeedbackForm>({\n    title: '',\n    description: '',\n    category: '',\n  });\n\n  const { data: feedbackItems, refetch } = useQuery<FeedbackItem[]>({\n    queryKey: ['feedback', sort],\n    queryFn: async () => {\n      const response = await client.get(`/api/feedback?sort=${sort}`);\n      return response.data;\n    }\n  });\n\n  const submitFeedback = useMutation({\n    mutationFn: async (formData: FormData) => {\n      return await client.post('/api/feedback', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n    },\n    onSuccess: () => {\n      setForm({\n        title: '',\n        description: '',\n        category: '',\n      });\n      refetch();\n    }\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', form.title);\n    formData.append('description', form.description);\n    formData.append('category', form.category);\n    if (form.screenshot) {\n      formData.append('screenshot', form.screenshot);\n    }\n    submitFeedback.mutate(formData);\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setForm(prev => ({ ...prev, screenshot: file }));\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-md-4 mb-4\">\n        <div className=\"card bg-dark\">\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Short, descriptive title\"\n                  required\n                  value={form.title}\n                  onChange={e => setForm(prev => ({ ...prev, title: e.target.value }))}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  placeholder=\"Detailed description of your feedback\"\n                  required\n                  value={form.description}\n                  onChange={e => setForm(prev => ({ ...prev, description: e.target.value }))}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Category</label>\n                <select\n                  className=\"form-select\"\n                  required\n                  value={form.category}\n                  onChange={e => setForm(prev => ({ ...prev, category: e.target.value }))}\n                >\n                  <option value=\"\">Select a category</option>\n                  {categories.map(category => (\n                    <option key={category} value={category}>\n                      {category}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Screenshot</label>\n                <input\n                  type=\"file\"\n                  className=\"form-control\"\n                  accept=\"image/*\"\n                  onChange={handleFileChange}\n                />\n              </div>\n              <button \n                type=\"submit\" \n                className=\"btn bg-solo-purple text-white w-100\"\n                disabled={submitFeedback.isPending}\n              >\n                {submitFeedback.isPending ? 'Submitting...' : 'Submit'}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-4\">\n        <div className=\"card bg-dark\">\n          <div className=\"card-header\">\n            <h4 className=\"card-title mb-0\">Community Feedback</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"btn-group mb-3 w-100\">\n              <button\n                className={`btn btn-outline-secondary ${sort === 'new' ? 'active' : ''}`}\n                onClick={() => setSort('new')}\n              >\n                Latest\n              </button>\n              <button\n                className={`btn btn-outline-secondary ${sort === 'top' ? 'active' : ''}`}\n                onClick={() => setSort('top')}\n              >\n                Top\n              </button>\n            </div>\n\n            {feedbackItems?.map(item => (\n              <div key={item.id} className=\"feedback-item mb-3\">\n                <h6>{item.title}</h6>\n                <p className=\"mb-1\">{item.description}</p>\n                <small className=\"text-muted\">\n                  By @{item.user.username} on {new Date(item.created_at).toLocaleDateString()}\n                </small>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n"],"names":["categories","Feedback","sort","setSort","useState","form","setForm","title","description","category","data","feedbackItems","refetch","useQuery","queryKey","queryFn","async","client","get","submitFeedback","useMutation","mutationFn","formData","post","headers","onSuccess","jsxs","className","children","jsx","onSubmit","e","preventDefault","FormData","append","screenshot","mutate","encType","jsxRuntimeExports","type","placeholder","required","value","onChange","prev","target","map","accept","file","_a","files","disabled","isPending","onClick","item","user","username","Date","created_at","toLocaleDateString","id"],"mappings":"oJAuBA,MAAMA,EAAa,CACjB,aACA,kBACA,kBACA,oBACA,SAGIC,EAAqB,KACzB,MAAOC,EAAMC,GAAWC,EAAAA,SAAwB,QACzCC,EAAMC,GAAWF,WAAuB,CAC7CG,MAAO,GACPC,YAAa,GACbC,SAAU,MAGJC,KAAMC,EAAeC,QAAAA,GAAYC,EAAyB,CAChEC,SAAU,CAAC,WAAYZ,GACvBa,QAASC,gBACgBC,EAAOC,IAAI,sBAAsBhB,MACxCQ,OAIdS,EAAiBC,EAAY,CACjCC,WAAYL,MAAOM,SACJL,EAAOM,KAAK,gBAAiBD,EAAU,CAClDE,QAAS,CACP,eAAgB,yBAItBC,UAAW,KACDnB,EAAA,CACNC,MAAO,GACPC,YAAa,GACbC,SAAU,KAEJG,GAAA,IAwBV,SAAAc,KAAC,MAAI,CAAAC,UAAU,6BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,gBACbC,SAACC,EAAAA,IAAA,MAAA,CAAIF,UAAU,eACbC,SAAAC,EAAAA,IAAC,MAAI,CAAAF,UAAU,YACbC,SAACF,EAAAA,KAAA,OAAA,CAAKI,SAxBKd,MAAOe,IAC1BA,EAAEC,iBACI,MAAAV,EAAW,IAAIW,SACZX,EAAAY,OAAO,QAAS7B,EAAKE,OACrBe,EAAAY,OAAO,cAAe7B,EAAKG,aAC3Bc,EAAAY,OAAO,WAAY7B,EAAKI,UAC7BJ,EAAK8B,YACEb,EAAAY,OAAO,aAAc7B,EAAK8B,YAErChB,EAAeiB,OAAOd,EAAQ,EAeQe,QAAQ,sBACpCT,SAAA,GAACF,KAAA,MAAA,CAAIC,UAAU,OACbC,SAAA,CAACC,EAAAA,IAAA,QAAA,CAAMF,UAAU,4BAA4BC,SAAK,UAClDU,EAAAT,IAAC,QAAA,CACCU,KAAK,OACLZ,UAAU,eACVa,YAAY,2BACZC,UAAQ,EACRC,MAAOrC,EAAKE,MACZoC,SAAeZ,GAAAzB,GAAiBsC,IAAA,IAAKA,EAAMrC,MAAOwB,EAAEc,OAAOH,iBAG/DhB,KAAC,MAAI,CAAAC,UAAU,OACbC,SAAA,CAACC,EAAAA,IAAA,QAAA,CAAMF,UAAU,4BAA4BC,SAAW,gBACxDU,EAAAT,IAAC,WAAA,CACCF,UAAU,eACVa,YAAY,wCACZC,UAAQ,EACRC,MAAOrC,EAAKG,YACZmC,SAAeZ,GAAAzB,GAAiBsC,IAAA,IAAKA,EAAMpC,YAAauB,EAAEc,OAAOH,iBAGrEhB,KAAC,MAAI,CAAAC,UAAU,OACbC,SAAA,CAACC,EAAAA,IAAA,QAAA,CAAMF,UAAU,4BAA4BC,SAAQ,aACrDU,EAAAZ,KAAC,SAAA,CACCC,UAAU,cACVc,UAAQ,EACRC,MAAOrC,EAAKI,SACZkC,SAAeZ,GAAAzB,GAAiBsC,IAAA,IAAKA,EAAMnC,SAAUsB,EAAEc,OAAOH,UAE9Dd,SAAA,CAACC,EAAAA,IAAA,SAAA,CAAOa,MAAM,GAAGd,SAAiB,sBACjC5B,EAAW8C,KACVrC,KAAAoB,IAAC,UAAsBa,MAAOjC,EAC3BmB,SADUnB,GAAAA,aAMnBiB,KAAC,MAAI,CAAAC,UAAU,OACbC,SAAA,CAACC,EAAAA,IAAA,QAAA,CAAMF,UAAU,aAAaC,SAAU,eACxCU,EAAAT,IAAC,QAAA,CACCU,KAAK,OACLZ,UAAU,eACVoB,OAAO,UACPJ,SAxDUZ,UACxB,MAAMiB,EAAO,OAAAC,EAAAlB,EAAEc,OAAOK,YAAQ,EAAAD,EAAA,GAC1BD,GACF1C,OAAiB,IAAKsC,EAAMT,WAAYa,KAAO,OAwDvCV,EAAAT,IAAC,SAAA,CACCU,KAAK,SACLZ,UAAU,sCACVwB,SAAUhC,EAAeiC,UAExBxB,SAAAT,EAAeiC,UAAY,gBAAkB,0BAOvD,MAAI,CAAAzB,UAAU,WACbC,SAACF,EAAAA,KAAA,MAAA,CAAIC,UAAU,eACbC,SAAA,GAACC,IAAA,MAAA,CAAIF,UAAU,cACbC,SAAAC,EAAAA,IAAC,MAAGF,UAAU,kBAAkBC,oCAElCF,KAAC,MAAI,CAAAC,UAAU,YACbC,SAAA,GAACF,KAAA,MAAA,CAAIC,UAAU,uBACbC,SAAA,CAAAU,EAAAT,IAAC,SAAA,CACCF,UAAW,8BAAsC,QAATzB,EAAiB,SAAW,IACpEmD,QAAS,IAAMlD,EAAQ,OACxByB,SAAA,WAGDU,EAAAT,IAAC,SAAA,CACCF,UAAW,8BAAsC,QAATzB,EAAiB,SAAW,IACpEmD,QAAS,IAAMlD,EAAQ,OACxByB,SAAA,WAKF,MAAAjB,OAAA,EAAAA,EAAemC,KAAIQ,GACjB5B,EAAAA,KAAA,MAAA,CAAkBC,UAAU,qBAC3BC,SAAA,GAACC,IAAA,KAAA,CAAID,WAAKrB,QACTsB,EAAAA,IAAA,IAAA,CAAEF,UAAU,OAAQC,WAAKpB,gBAC1BkB,KAAC,QAAM,CAAAC,UAAU,aAAaC,SAAA,CAAA,OACvB0B,EAAKC,KAAKC,SAAS,OAAK,IAAIC,KAAKH,EAAKI,YAAYC,0BAJjDL,EAAKM,gBAWzB"}