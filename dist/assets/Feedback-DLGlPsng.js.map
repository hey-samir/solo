{"version":3,"file":"Feedback-DLGlPsng.js","sources":["../../src/pages/Feedback.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport client from '../api/client';\n\ninterface FeedbackItem {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  screenshot_url?: string;\n  created_at: string;\n  user: {\n    username: string;\n  };\n}\n\ninterface FeedbackForm {\n  title: string;\n  description: string;\n  category: string;\n  screenshot?: File;\n}\n\nconst categories = [\n  'Bug Report',\n  'Feature Request',\n  'User Experience',\n  'Performance Issue',\n  'Other'\n];\n\nconst Feedback: React.FC = () => {\n  const [sort, setSort] = useState<'new' | 'top'>('new');\n  const [form, setForm] = useState<FeedbackForm>({\n    title: '',\n    description: '',\n    category: '',\n  });\n\n  const { data: feedbackItems, refetch } = useQuery<FeedbackItem[]>({\n    queryKey: ['feedback', sort],\n    queryFn: async () => {\n      const response = await client.get(`/api/feedback?sort=${sort}`);\n      return response.data;\n    }\n  });\n\n  const submitFeedback = useMutation({\n    mutationFn: async (formData: FormData) => {\n      return await client.post('/api/feedback', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n    },\n    onSuccess: () => {\n      setForm({\n        title: '',\n        description: '',\n        category: '',\n      });\n      refetch();\n    }\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', form.title);\n    formData.append('description', form.description);\n    formData.append('category', form.category);\n    if (form.screenshot) {\n      formData.append('screenshot', form.screenshot);\n    }\n    submitFeedback.mutate(formData);\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setForm(prev => ({ ...prev, screenshot: file }));\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-md-4 mb-4\">\n        <div className=\"card bg-dark\">\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Short, descriptive title\"\n                  required\n                  value={form.title}\n                  onChange={e => setForm(prev => ({ ...prev, title: e.target.value }))}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  placeholder=\"Detailed description of your feedback\"\n                  required\n                  value={form.description}\n                  onChange={e => setForm(prev => ({ ...prev, description: e.target.value }))}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Category</label>\n                <select\n                  className=\"form-select\"\n                  required\n                  value={form.category}\n                  onChange={e => setForm(prev => ({ ...prev, category: e.target.value }))}\n                >\n                  <option value=\"\">Select a category</option>\n                  {categories.map(category => (\n                    <option key={category} value={category}>\n                      {category}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Screenshot</label>\n                <input\n                  type=\"file\"\n                  className=\"form-control\"\n                  accept=\"image/*\"\n                  onChange={handleFileChange}\n                />\n              </div>\n              <button \n                type=\"submit\" \n                className=\"btn bg-solo-purple text-white w-100\"\n                disabled={submitFeedback.isPending}\n              >\n                {submitFeedback.isPending ? 'Submitting...' : 'Submit'}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-4\">\n        <div className=\"card bg-dark\">\n          <div className=\"card-header\">\n            <h4 className=\"card-title mb-0\">Community Feedback</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"btn-group mb-3 w-100\">\n              <button\n                className={`btn btn-outline-secondary ${sort === 'new' ? 'active' : ''}`}\n                onClick={() => setSort('new')}\n              >\n                Latest\n              </button>\n              <button\n                className={`btn btn-outline-secondary ${sort === 'top' ? 'active' : ''}`}\n                onClick={() => setSort('top')}\n              >\n                Top\n              </button>\n            </div>\n\n            {feedbackItems?.map(item => (\n              <div key={item.id} className=\"feedback-item mb-3\">\n                <h6>{item.title}</h6>\n                <p className=\"mb-1\">{item.description}</p>\n                <small className=\"text-muted\">\n                  By @{item.user.username} on {new Date(item.created_at).toLocaleDateString()}\n                </small>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n"],"names":["categories","Feedback","sort","setSort","useState","form","setForm","feedbackItems","refetch","useQuery","client","submitFeedback","useMutation","formData","handleSubmit","e","handleFileChange","file","_a","prev","jsxs","jsx","category","item"],"mappings":"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"}