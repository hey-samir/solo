{"version":3,"file":"Sends-D7oN7TCr.js","sources":["../../src/pages/Sends.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport client from '../api/client'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\ninterface Route {\n  id: number\n  color: string\n  grade: string\n  wall_sector: string\n  anchor_number: number\n}\n\ninterface SendFormData {\n  route_id: number\n  tries: number\n  status: boolean\n  rating: number\n  notes: string\n}\n\n// Color to hex mapping for route colors\nconst colorToHex: Record<string, string> = {\n  'White': '#FFFFFF',\n  'Pink': '#FF69B4',\n  'Blue': '#0000FF',\n  'Black': '#000000',\n  'Orange': '#FFA500',\n  'Purple': '#800080',\n  'Green': '#008000',\n  'Red': '#FF0000',\n  'Yellow': '#FFFF00',\n  'Teal': '#008080'\n}\n\nconst Sends: FC = () => {\n  const [formData, setFormData] = useState<SendFormData>({\n    route_id: 0,\n    tries: 1,\n    status: true,\n    rating: 3,\n    notes: ''\n  })\n\n  const { data: routes, isLoading } = useQuery<Route[]>({\n    queryKey: ['routes'],\n    queryFn: async () => {\n      const response = await client.get('/routes')\n      return response.data\n    }\n  })\n\n  const sendMutation = useMutation({\n    mutationFn: async (data: SendFormData) => {\n      return await client.post('/climbs', data)\n    },\n    onSuccess: () => {\n      // Reset form and show success message\n      setFormData({\n        route_id: 0,\n        tries: 1,\n        status: true,\n        rating: 3,\n        notes: ''\n      })\n    }\n  })\n\n  // Points calculation function\n  const calculatePoints = (grade: string, rating: number, status: boolean, tries: number) => {\n    if (!grade) return 0;\n    const [_, mainGrade, subGrade] = grade.match(/5\\.(\\d+)([a-d])?/) || [null, '0', ''];\n\n    const basePoints: Record<string, number> = {\n      '5': 50, '6': 60, '7': 70, '8': 80, '9': 100, '10': 150,\n      '11': 200, '12': 300, '13': 400, '14': 500, '15': 600\n    }\n\n    const subGradeMultiplier: Record<string, number> = {\n      'a': 1, 'b': 1.1, 'c': 1.2, 'd': 1.3\n    }\n\n    const base = (basePoints[mainGrade] || 0) * (subGradeMultiplier[subGrade] || 1);\n    const starMultiplier = Math.max(0.1, rating / 3);\n    const statusMultiplier = status ? 1 : 0.5;\n    const triesMultiplier = Math.max(0.1, 1 / Math.sqrt(tries));\n\n    return Math.round(base * starMultiplier * statusMultiplier * triesMultiplier);\n  }\n\n  if (isLoading) {\n    return <LoadingSpinner />\n  }\n\n  const selectedRoute = routes?.find(r => r.id === formData.route_id);\n  const points = selectedRoute \n    ? calculatePoints(selectedRoute.grade, formData.rating, formData.status, formData.tries)\n    : 0;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"card\">\n        <div className=\"card-body p-0\">\n          <form onSubmit={(e) => {\n            e.preventDefault()\n            sendMutation.mutate(formData)\n          }} className=\"w-100\">\n            <table className=\"table table-form w-100\">\n              <tbody>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Route</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <select \n                      className=\"form-select form-select-lg custom-select\"\n                      value={formData.route_id || ''}\n                      onChange={(e) => setFormData(prev => ({ ...prev, route_id: Number(e.target.value) }))}\n                      required\n                    >\n                      <option value=\"\" disabled>Select a route</option>\n                      {routes?.map(route => (\n                        <option \n                          key={route.id} \n                          value={route.id}\n                          className=\"route-option\"\n                        >\n                          <span \n                            className=\"color-dot\" \n                            style={{ backgroundColor: colorToHex[route.color] || '#FFFFFF' }}\n                          />\n                          {route.wall_sector} - {route.anchor_number} - {route.color} {route.grade}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Tries</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <input \n                        type=\"range\"\n                        min=\"1\"\n                        max=\"10\"\n                        value={formData.tries}\n                        onChange={(e) => setFormData(prev => ({ ...prev, tries: Number(e.target.value) }))}\n                        className=\"form-range\"\n                      />\n                      <span className=\"text-white\">{formData.tries}</span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Status</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"form-check form-switch\">\n                      <input \n                        className=\"form-check-input custom-switch\"\n                        type=\"checkbox\"\n                        role=\"switch\"\n                        checked={formData.status}\n                        onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.checked }))}\n                      />\n                      <label className=\"form-check-label\">\n                        {formData.status ? 'Sent' : 'Attempted'}\n                      </label>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Stars</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"rating-container\">\n                      <div className=\"rating\">\n                        {[1, 2, 3, 4, 5].map((star) => (\n                          <i\n                            key={star}\n                            className={`rating-star bi bi-star-fill ${star <= formData.rating ? 'active' : ''}`}\n                            onClick={() => setFormData(prev => ({ ...prev, rating: star }))}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label\">Notes</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <textarea \n                      className=\"form-control form-control-lg\"\n                      rows={3}\n                      value={formData.notes}\n                      onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"px-3 pb-3 w-100\">\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary btn-lg w-100\"\n                disabled={sendMutation.isPending}\n              >\n                {sendMutation.isPending ? 'Sending...' : formData.status ? 'Send' : 'Log'}\n              </button>\n              <div className=\"text-white mt-3 text-center fs-6\">\n                Points: {points}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sends"],"names":["colorToHex","Sends","formData","setFormData","useState","routes","isLoading","useQuery","client","sendMutation","useMutation","data","calculatePoints","grade","rating","status","tries","_","mainGrade","subGrade","basePoints","subGradeMultiplier","base","starMultiplier","statusMultiplier","triesMultiplier","LoadingSpinner","selectedRoute","r","points","jsx","jsxs","e","prev","route","star"],"mappings":"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"}