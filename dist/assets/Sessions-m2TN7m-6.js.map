{"version":3,"file":"Sessions-m2TN7m-6.js","sources":["../../src/pages/Sessions.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport client from '../api/client'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\ninterface Route {\n  color: string\n  grade: string\n}\n\ninterface Climb {\n  id: number\n  routeId: number\n  status: boolean\n  rating: number\n  tries: number\n  notes: string | null\n  points: number\n  createdAt: string\n  route: Route\n}\n\ninterface ClimbsByDate {\n  [date: string]: Climb[]\n}\n\ntype SortKey = 'color' | 'grade' | 'status' | 'tries' | 'rating' | 'points'\ntype SortDirection = 'asc' | 'desc'\n\nconst Sessions: FC = () => {\n  const [sortConfig, setSortConfig] = useState<{\n    key: SortKey\n    direction: SortDirection\n    date: string | null\n  }>({\n    key: 'color',\n    direction: 'asc',\n    date: null\n  })\n\n  const { data: climbs, isLoading } = useQuery<Climb[]>({\n    queryKey: ['climbs'],\n    queryFn: async () => {\n      const response = await client.get('/climbs')\n      return response.data\n    }\n  })\n\n  if (isLoading) {\n    return <LoadingSpinner />\n  }\n\n  const getColorHex = (color: string): string => {\n    const colorMap: Record<string, string> = {\n      'White': '#FFFFFF',\n      'Pink': '#FF69B4',\n      'Blue': '#0000FF',\n      'Black': '#000000',\n      'Orange': '#FFA500',\n      'Purple': '#800080',\n      'Green': '#008000',\n      'Red': '#FF0000',\n      'Yellow': '#FFFF00',\n      'Teal': '#008080'\n    }\n    return colorMap[color] || '#CCCCCC'\n  }\n\n  // Group climbs by date\n  const climbsByDate = climbs?.reduce((acc: ClimbsByDate, climb) => {\n    const date = new Date(climb.createdAt).toLocaleDateString()\n    if (!acc[date]) {\n      acc[date] = []\n    }\n    acc[date].push(climb)\n    return acc\n  }, {}) || {}\n\n  const sortClimbs = (climbs: Climb[]) => {\n    return [...climbs].sort((a, b) => {\n      let comparison = 0\n      switch (sortConfig.key) {\n        case 'color':\n          comparison = a.route.color.localeCompare(b.route.color)\n          break\n        case 'grade':\n          comparison = a.route.grade.localeCompare(b.route.grade)\n          break\n        case 'status':\n          comparison = Number(b.status) - Number(a.status)\n          break\n        case 'tries':\n          comparison = a.tries - b.tries\n          break\n        case 'rating':\n          comparison = a.rating - b.rating\n          break\n        case 'points':\n          comparison = a.points - b.points\n          break\n        default:\n          return 0\n      }\n      return sortConfig.direction === 'asc' ? comparison : -comparison\n    })\n  }\n\n  const handleSort = (key: SortKey, date: string) => {\n    setSortConfig(current => ({\n      key,\n      direction: \n        current.key === key && current.date === date && current.direction === 'asc' \n          ? 'desc' \n          : 'asc',\n      date\n    }))\n  }\n\n  const renderSortIcon = (key: SortKey, date: string) => {\n    if (sortConfig.key !== key || sortConfig.date !== date) return null\n    return (\n      <span className=\"ml-1\">\n        {sortConfig.direction === 'asc' ? '↑' : '↓'}\n      </span>\n    )\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-6\">Your Climbing Sessions</h1>\n\n      {Object.entries(climbsByDate).map(([date, sessionClimbs]) => (\n        <div key={date} className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">{date}</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white border border-gray-200 rounded-lg\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('color', date)}\n                  >\n                    Color {renderSortIcon('color', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('grade', date)}\n                  >\n                    Grade {renderSortIcon('grade', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('status', date)}\n                  >\n                    Status {renderSortIcon('status', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('tries', date)}\n                  >\n                    # Tries {renderSortIcon('tries', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('rating', date)}\n                  >\n                    Stars {renderSortIcon('rating', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('points', date)}\n                  >\n                    Points {renderSortIcon('points', date)}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortClimbs(sessionClimbs).map((climb) => (\n                  <tr key={climb.id} className=\"border-t border-gray-100 hover:bg-gray-50\">\n                    <td className=\"px-4 py-2\">\n                      <div className=\"flex items-center\">\n                        <span \n                          className=\"w-4 h-4 rounded-full mr-2\" \n                          style={{ \n                            backgroundColor: getColorHex(climb.route.color),\n                            border: climb.route.color === 'White' ? '1px solid #ccc' : 'none'\n                          }}\n                        />\n                        {climb.route.color}\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-2\">{climb.route.grade}</td>\n                    <td className=\"px-4 py-2\">\n                      <span className={`font-medium ${climb.status ? 'text-green-600' : 'text-red-600'}`}>\n                        {climb.status ? 'Send' : 'Attempt'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-2\">{climb.tries}</td>\n                    <td className=\"px-4 py-2\">{climb.rating}/5</td>\n                    <td className=\"px-4 py-2\">\n                      <span className=\"text-purple-600 font-medium\">\n                        {climb.points} pts\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ))}\n\n      {Object.keys(climbsByDate).length === 0 && (\n        <div className=\"text-center my-8\">\n          <h4 className=\"text-xl text-gray-600 mb-4\">Enter your first climb to see Sessions</h4>\n          <a \n            href=\"/sends\" \n            className=\"inline-block bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition\"\n          >\n            Back to Sends\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Sessions"],"names":["Sessions","sortConfig","setSortConfig","useState","key","direction","date","data","climbs","isLoading","useQuery","queryKey","queryFn","async","client","get","LoadingSpinner","climbsByDate","reduce","acc","climb","Date","createdAt","toLocaleDateString","push","handleSort","current","renderSortIcon","className","children","jsxs","jsx","Object","entries","map","sessionClimbs","jsxRuntimeExports","onClick","sort","a","b","comparison","route","color","localeCompare","grade","Number","status","tries","rating","points","style","backgroundColor","White","Pink","Blue","Black","Orange","Purple","Green","Red","Yellow","Teal","border","id","keys","length","href"],"mappings":"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"}