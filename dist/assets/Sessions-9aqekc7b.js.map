{"version":3,"file":"Sessions-9aqekc7b.js","sources":["../../src/pages/Sessions.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport client from '../api/client'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\ninterface Route {\n  color: string\n  grade: string\n}\n\ninterface Climb {\n  id: number\n  routeId: number\n  status: boolean\n  rating: number\n  tries: number\n  notes: string | null\n  points: number\n  createdAt: string\n  route: Route\n}\n\ninterface ClimbsByDate {\n  [date: string]: Climb[]\n}\n\ntype SortKey = 'color' | 'grade' | 'status' | 'tries' | 'rating' | 'points'\ntype SortDirection = 'asc' | 'desc'\n\nconst Sessions: FC = () => {\n  const [sortConfig, setSortConfig] = useState<{\n    key: SortKey\n    direction: SortDirection\n    date: string | null\n  }>({\n    key: 'color',\n    direction: 'asc',\n    date: null\n  })\n\n  const { data: climbs, isLoading } = useQuery<Climb[]>({\n    queryKey: ['climbs'],\n    queryFn: async () => {\n      const response = await client.get('/climbs')\n      return response.data\n    }\n  })\n\n  if (isLoading) {\n    return <LoadingSpinner />\n  }\n\n  const getColorHex = (color: string): string => {\n    const colorMap: Record<string, string> = {\n      'White': '#FFFFFF',\n      'Pink': '#FF69B4',\n      'Blue': '#0000FF',\n      'Black': '#000000',\n      'Orange': '#FFA500',\n      'Purple': '#800080',\n      'Green': '#008000',\n      'Red': '#FF0000',\n      'Yellow': '#FFFF00',\n      'Teal': '#008080'\n    }\n    return colorMap[color] || '#CCCCCC'\n  }\n\n  // Group climbs by date\n  const climbsByDate = climbs?.reduce((acc: ClimbsByDate, climb) => {\n    const date = new Date(climb.createdAt).toLocaleDateString()\n    if (!acc[date]) {\n      acc[date] = []\n    }\n    acc[date].push(climb)\n    return acc\n  }, {}) || {}\n\n  const sortClimbs = (climbs: Climb[]) => {\n    return [...climbs].sort((a, b) => {\n      let comparison = 0\n      switch (sortConfig.key) {\n        case 'color':\n          comparison = a.route.color.localeCompare(b.route.color)\n          break\n        case 'grade':\n          comparison = a.route.grade.localeCompare(b.route.grade)\n          break\n        case 'status':\n          comparison = Number(b.status) - Number(a.status)\n          break\n        case 'tries':\n          comparison = a.tries - b.tries\n          break\n        case 'rating':\n          comparison = a.rating - b.rating\n          break\n        case 'points':\n          comparison = a.points - b.points\n          break\n        default:\n          return 0\n      }\n      return sortConfig.direction === 'asc' ? comparison : -comparison\n    })\n  }\n\n  const handleSort = (key: SortKey, date: string) => {\n    setSortConfig(current => ({\n      key,\n      direction: \n        current.key === key && current.date === date && current.direction === 'asc' \n          ? 'desc' \n          : 'asc',\n      date\n    }))\n  }\n\n  const renderSortIcon = (key: SortKey, date: string) => {\n    if (sortConfig.key !== key || sortConfig.date !== date) return null\n    return (\n      <span className=\"ml-1\">\n        {sortConfig.direction === 'asc' ? '↑' : '↓'}\n      </span>\n    )\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-6\">Your Climbing Sessions</h1>\n\n      {Object.entries(climbsByDate).map(([date, sessionClimbs]) => (\n        <div key={date} className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">{date}</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white border border-gray-200 rounded-lg\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('color', date)}\n                  >\n                    Color {renderSortIcon('color', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('grade', date)}\n                  >\n                    Grade {renderSortIcon('grade', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('status', date)}\n                  >\n                    Status {renderSortIcon('status', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('tries', date)}\n                  >\n                    # Tries {renderSortIcon('tries', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('rating', date)}\n                  >\n                    Stars {renderSortIcon('rating', date)}\n                  </th>\n                  <th \n                    className=\"px-4 py-2 cursor-pointer\" \n                    onClick={() => handleSort('points', date)}\n                  >\n                    Points {renderSortIcon('points', date)}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortClimbs(sessionClimbs).map((climb) => (\n                  <tr key={climb.id} className=\"border-t border-gray-100 hover:bg-gray-50\">\n                    <td className=\"px-4 py-2\">\n                      <div className=\"flex items-center\">\n                        <span \n                          className=\"w-4 h-4 rounded-full mr-2\" \n                          style={{ \n                            backgroundColor: getColorHex(climb.route.color),\n                            border: climb.route.color === 'White' ? '1px solid #ccc' : 'none'\n                          }}\n                        />\n                        {climb.route.color}\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-2\">{climb.route.grade}</td>\n                    <td className=\"px-4 py-2\">\n                      <span className={`font-medium ${climb.status ? 'text-green-600' : 'text-red-600'}`}>\n                        {climb.status ? 'Send' : 'Attempt'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-2\">{climb.tries}</td>\n                    <td className=\"px-4 py-2\">{climb.rating}/5</td>\n                    <td className=\"px-4 py-2\">\n                      <span className=\"text-purple-600 font-medium\">\n                        {climb.points} pts\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ))}\n\n      {Object.keys(climbsByDate).length === 0 && (\n        <div className=\"text-center my-8\">\n          <h4 className=\"text-xl text-gray-600 mb-4\">Enter your first climb to see Sessions</h4>\n          <a \n            href=\"/sends\" \n            className=\"inline-block bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition\"\n          >\n            Back to Sends\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Sessions"],"names":["Sessions","sortConfig","setSortConfig","useState","climbs","isLoading","useQuery","client","LoadingSpinner","getColorHex","color","climbsByDate","acc","climb","date","sortClimbs","a","b","comparison","handleSort","key","current","renderSortIcon","jsx","jsxs","sessionClimbs"],"mappings":"wGA6BA,MAAMA,EAAe,IAAM,CACzB,KAAM,CAACC,EAAYC,CAAa,EAAIC,WAIjC,CACD,IAAK,QACL,UAAW,MACX,KAAM,IAAA,CACP,EAEK,CAAE,KAAMC,EAAQ,UAAAC,CAAA,EAAcC,EAAkB,CACpD,SAAU,CAAC,QAAQ,EACnB,QAAS,UACU,MAAMC,EAAO,IAAI,SAAS,GAC3B,IAClB,CACD,EAED,GAAIF,EACF,aAAQG,EAAe,EAAA,EAGnB,MAAAC,EAAeC,IACsB,CACvC,MAAS,UACT,KAAQ,UACR,KAAQ,UACR,MAAS,UACT,OAAU,UACV,OAAU,UACV,MAAS,UACT,IAAO,UACP,OAAU,UACV,KAAQ,SACV,GACgBA,CAAK,GAAK,UAItBC,GAAeP,GAAA,YAAAA,EAAQ,OAAO,CAACQ,EAAmBC,IAAU,CAChE,MAAMC,EAAO,IAAI,KAAKD,EAAM,SAAS,EAAE,mBAAmB,EACtD,OAACD,EAAIE,CAAI,IACPF,EAAAE,CAAI,EAAI,CAAC,GAEXF,EAAAE,CAAI,EAAE,KAAKD,CAAK,EACbD,CAAA,EACN,CAAA,KAAO,CAAC,EAELG,EAAcX,GACX,CAAC,GAAGA,CAAM,EAAE,KAAK,CAACY,EAAGC,IAAM,CAChC,IAAIC,EAAa,EACjB,OAAQjB,EAAW,IAAK,CACtB,IAAK,QACHiB,EAAaF,EAAE,MAAM,MAAM,cAAcC,EAAE,MAAM,KAAK,EACtD,MACF,IAAK,QACHC,EAAaF,EAAE,MAAM,MAAM,cAAcC,EAAE,MAAM,KAAK,EACtD,MACF,IAAK,SACHC,EAAa,OAAOD,EAAE,MAAM,EAAI,OAAOD,EAAE,MAAM,EAC/C,MACF,IAAK,QACUE,EAAAF,EAAE,MAAQC,EAAE,MACzB,MACF,IAAK,SACUC,EAAAF,EAAE,OAASC,EAAE,OAC1B,MACF,IAAK,SACUC,EAAAF,EAAE,OAASC,EAAE,OAC1B,MACF,QACS,MAAA,EAAA,CAEX,OAAOhB,EAAW,YAAc,MAAQiB,EAAa,CAACA,CAAA,CACvD,EAGGC,EAAa,CAACC,EAAcN,IAAiB,CACjDZ,EAA0BmB,IAAA,CACxB,IAAAD,EACA,UACEC,EAAQ,MAAQD,GAAOC,EAAQ,OAASP,GAAQO,EAAQ,YAAc,MAClE,OACA,MACN,KAAAP,CAAA,EACA,CACJ,EAEMQ,EAAiB,CAACF,EAAcN,IAChCb,EAAW,MAAQmB,GAAOnB,EAAW,OAASa,EAAa,KAE7DS,MAAC,QAAK,UAAU,OACb,WAAW,YAAc,MAAQ,IAAM,GAC1C,CAAA,EAKF,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAsB,yBAAA,EAE7D,OAAO,QAAQZ,CAAY,EAAE,IAAI,CAAC,CAACG,EAAMW,CAAa,IACpDD,EAAA,KAAA,MAAA,CAAe,UAAU,OACxB,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA4C,SAAKT,EAAA,QAC9D,MAAI,CAAA,UAAU,kBACb,SAACU,EAAA,KAAA,QAAA,CAAM,UAAU,wDACf,SAAA,CAAAD,MAAC,QACC,CAAA,SAAAC,EAAAA,KAAC,KAAG,CAAA,UAAU,aACZ,SAAA,CAAAA,EAAA,KAAC,KAAA,CACC,UAAU,2BACV,QAAS,IAAML,EAAW,QAASL,CAAI,EACxC,SAAA,CAAA,SACQQ,EAAe,QAASR,CAAI,CAAA,CAAA,CACrC,EACAU,EAAA,KAAC,KAAA,CACC,UAAU,2BACV,QAAS,IAAML,EAAW,QAASL,CAAI,EACxC,SAAA,CAAA,SACQQ,EAAe,QAASR,CAAI,CAAA,CAAA,CACrC,EACAU,EAAA,KAAC,KAAA,CACC,UAAU,2BACV,QAAS,IAAML,EAAW,SAAUL,CAAI,EACzC,SAAA,CAAA,UACSQ,EAAe,SAAUR,CAAI,CAAA,CAAA,CACvC,EACAU,EAAA,KAAC,KAAA,CACC,UAAU,2BACV,QAAS,IAAML,EAAW,QAASL,CAAI,EACxC,SAAA,CAAA,WACUQ,EAAe,QAASR,CAAI,CAAA,CAAA,CACvC,EACAU,EAAA,KAAC,KAAA,CACC,UAAU,2BACV,QAAS,IAAML,EAAW,SAAUL,CAAI,EACzC,SAAA,CAAA,SACQQ,EAAe,SAAUR,CAAI,CAAA,CAAA,CACtC,EACAU,EAAA,KAAC,KAAA,CACC,UAAU,2BACV,QAAS,IAAML,EAAW,SAAUL,CAAI,EACzC,SAAA,CAAA,UACSQ,EAAe,SAAUR,CAAI,CAAA,CAAA,CAAA,CACvC,CAAA,CACF,CACF,CAAA,EACAS,EAAAA,IAAC,QACE,CAAA,SAAAR,EAAWU,CAAa,EAAE,IAAKZ,GAC9BW,EAAA,KAAC,KAAkB,CAAA,UAAU,4CAC3B,SAAA,CAAAD,EAAAA,IAAC,MAAG,UAAU,YACZ,SAACC,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAD,EAAA,IAAC,OAAA,CACC,UAAU,4BACV,MAAO,CACL,gBAAiBd,EAAYI,EAAM,MAAM,KAAK,EAC9C,OAAQA,EAAM,MAAM,QAAU,QAAU,iBAAmB,MAAA,CAC7D,CACF,EACCA,EAAM,MAAM,KAAA,CAAA,CACf,CACF,CAAA,QACC,KAAG,CAAA,UAAU,YAAa,SAAAA,EAAM,MAAM,MAAM,QAC5C,KAAG,CAAA,UAAU,YACZ,SAAAU,EAAAA,IAAC,QAAK,UAAW,eAAeV,EAAM,OAAS,iBAAmB,cAAc,GAC7E,WAAM,OAAS,OAAS,SAC3B,CAAA,EACF,EACCU,EAAA,IAAA,KAAA,CAAG,UAAU,YAAa,WAAM,MAAM,EACvCC,EAAAA,KAAC,KAAG,CAAA,UAAU,YAAa,SAAA,CAAMX,EAAA,OAAO,IAAA,EAAE,QACzC,KAAG,CAAA,UAAU,YACZ,SAACW,EAAA,KAAA,OAAA,CAAK,UAAU,8BACb,SAAA,CAAMX,EAAA,OAAO,MAAA,CAAA,CAChB,CACF,CAAA,CAAA,GAzBOA,EAAM,EA0Bf,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,EA5EQC,CA6EV,CACD,EAEA,OAAO,KAAKH,CAAY,EAAE,SAAW,GACpCa,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAsC,yCAAA,EACjFA,EAAA,IAAC,IAAA,CACC,KAAK,SACL,UAAU,4FACX,SAAA,eAAA,CAAA,CAED,CACF,CAAA,CAAA,EAEJ,CAEJ"}