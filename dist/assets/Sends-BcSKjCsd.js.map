{"version":3,"file":"Sends-BcSKjCsd.js","sources":["../../src/pages/Sends.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport client from '../api/client'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\ninterface Route {\n  id: number\n  color: string\n  grade: string\n  wall_sector: string\n  anchor_number: number\n}\n\ninterface SendFormData {\n  route_id: number\n  tries: number\n  status: boolean\n  rating: number\n  notes: string\n}\n\n// Color to hex mapping for route colors\nconst colorToHex: Record<string, string> = {\n  'White': '#FFFFFF',\n  'Pink': '#FF69B4',\n  'Blue': '#0000FF',\n  'Black': '#000000',\n  'Orange': '#FFA500',\n  'Purple': '#800080',\n  'Green': '#008000',\n  'Red': '#FF0000',\n  'Yellow': '#FFFF00',\n  'Teal': '#008080'\n}\n\nconst Sends: FC = () => {\n  const [formData, setFormData] = useState<SendFormData>({\n    route_id: 0,\n    tries: 1,\n    status: true,\n    rating: 3,\n    notes: ''\n  })\n\n  const { data: routes, isLoading } = useQuery<Route[]>({\n    queryKey: ['routes'],\n    queryFn: async () => {\n      const response = await client.get('/routes')\n      return response.data\n    }\n  })\n\n  const sendMutation = useMutation({\n    mutationFn: async (data: SendFormData) => {\n      return await client.post('/climbs', data)\n    },\n    onSuccess: () => {\n      // Reset form and show success message\n      setFormData({\n        route_id: 0,\n        tries: 1,\n        status: true,\n        rating: 3,\n        notes: ''\n      })\n    }\n  })\n\n  // Points calculation function\n  const calculatePoints = (grade: string, rating: number, status: boolean, tries: number) => {\n    if (!grade) return 0;\n    const [_, mainGrade, subGrade] = grade.match(/5\\.(\\d+)([a-d])?/) || [null, '0', ''];\n\n    const basePoints: Record<string, number> = {\n      '5': 50, '6': 60, '7': 70, '8': 80, '9': 100, '10': 150,\n      '11': 200, '12': 300, '13': 400, '14': 500, '15': 600\n    }\n\n    const subGradeMultiplier: Record<string, number> = {\n      'a': 1, 'b': 1.1, 'c': 1.2, 'd': 1.3\n    }\n\n    const base = (basePoints[mainGrade] || 0) * (subGradeMultiplier[subGrade] || 1);\n    const starMultiplier = Math.max(0.1, rating / 3);\n    const statusMultiplier = status ? 1 : 0.5;\n    const triesMultiplier = Math.max(0.1, 1 / Math.sqrt(tries));\n\n    return Math.round(base * starMultiplier * statusMultiplier * triesMultiplier);\n  }\n\n  if (isLoading) {\n    return <LoadingSpinner />\n  }\n\n  const selectedRoute = routes?.find(r => r.id === formData.route_id);\n  const points = selectedRoute \n    ? calculatePoints(selectedRoute.grade, formData.rating, formData.status, formData.tries)\n    : 0;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"card\">\n        <div className=\"card-body p-0\">\n          <form onSubmit={(e) => {\n            e.preventDefault()\n            sendMutation.mutate(formData)\n          }} className=\"w-100\">\n            <table className=\"table table-form w-100\">\n              <tbody>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Route</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <select \n                      className=\"form-select form-select-lg custom-select\"\n                      value={formData.route_id || ''}\n                      onChange={(e) => setFormData(prev => ({ ...prev, route_id: Number(e.target.value) }))}\n                      required\n                    >\n                      <option value=\"\" disabled>Select a route</option>\n                      {routes?.map(route => (\n                        <option \n                          key={route.id} \n                          value={route.id}\n                          className=\"route-option\"\n                        >\n                          <span \n                            className=\"color-dot\" \n                            style={{ backgroundColor: colorToHex[route.color] || '#FFFFFF' }}\n                          />\n                          {route.wall_sector} - {route.anchor_number} - {route.color} {route.grade}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Tries</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <input \n                        type=\"range\"\n                        min=\"1\"\n                        max=\"10\"\n                        value={formData.tries}\n                        onChange={(e) => setFormData(prev => ({ ...prev, tries: Number(e.target.value) }))}\n                        className=\"form-range\"\n                      />\n                      <span className=\"text-white\">{formData.tries}</span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Status</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"form-check form-switch\">\n                      <input \n                        className=\"form-check-input custom-switch\"\n                        type=\"checkbox\"\n                        role=\"switch\"\n                        checked={formData.status}\n                        onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.checked }))}\n                      />\n                      <label className=\"form-check-label\">\n                        {formData.status ? 'Sent' : 'Attempted'}\n                      </label>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Stars</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"rating-container\">\n                      <div className=\"rating\">\n                        {[1, 2, 3, 4, 5].map((star) => (\n                          <i\n                            key={star}\n                            className={`rating-star bi bi-star-fill ${star <= formData.rating ? 'active' : ''}`}\n                            onClick={() => setFormData(prev => ({ ...prev, rating: star }))}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label\">Notes</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <textarea \n                      className=\"form-control form-control-lg\"\n                      rows={3}\n                      value={formData.notes}\n                      onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"px-3 pb-3 w-100\">\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary btn-lg w-100\"\n                disabled={sendMutation.isPending}\n              >\n                {sendMutation.isPending ? 'Sending...' : formData.status ? 'Send' : 'Log'}\n              </button>\n              <div className=\"text-white mt-3 text-center fs-6\">\n                Points: {points}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sends"],"names":["colorToHex","White","Pink","Blue","Black","Orange","Purple","Green","Red","Yellow","Teal","Sends","formData","setFormData","useState","route_id","tries","status","rating","notes","data","routes","isLoading","useQuery","queryKey","queryFn","async","client","get","sendMutation","useMutation","mutationFn","post","onSuccess","LoadingSpinner","selectedRoute","find","r","id","points","grade","_","mainGrade","subGrade","match","base","a","b","c","d","starMultiplier","Math","max","statusMultiplier","triesMultiplier","sqrt","round","calculatePoints","className","children","jsx","jsxRuntimeExports","jsxs","onSubmit","e","preventDefault","mutate","value","onChange","prev","Number","target","required","disabled","map","route","style","backgroundColor","color","wall_sector","anchor_number","type","min","role","checked","star","onClick","rows","isPending"],"mappings":"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"}