{"version":3,"file":"vendor-charts-D2ktHQbH.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","toRadians","degrees","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","__publicField","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","animationsDisabled","pointCount","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","_scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","getPointPositionForValue","_getTargetValue","getDistanceFromCenterForValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_setMinAndMaxByKey","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","nextOptions","setOptions","React","createElement","role","reactExports","forwardRef","createTypedChart","registerables","Line","Bar","Doughnut"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}