{"version":3,"file":"Sends-DAQv27ow.js","sources":["../../src/pages/Sends.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport client from '../api/client'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\ninterface Route {\n  id: number\n  color: string\n  grade: string\n  wall_sector: string\n  anchor_number: number\n}\n\ninterface SendFormData {\n  route_id: number\n  tries: number\n  status: boolean\n  rating: number\n  notes: string\n}\n\n// Color to hex mapping for route colors\nconst colorToHex: Record<string, string> = {\n  'White': '#FFFFFF',\n  'Pink': '#FF69B4',\n  'Blue': '#0000FF',\n  'Black': '#000000',\n  'Orange': '#FFA500',\n  'Purple': '#800080',\n  'Green': '#008000',\n  'Red': '#FF0000',\n  'Yellow': '#FFFF00',\n  'Teal': '#008080'\n}\n\nconst Sends: FC = () => {\n  const [formData, setFormData] = useState<SendFormData>({\n    route_id: 0,\n    tries: 1,\n    status: true,\n    rating: 3,\n    notes: ''\n  })\n\n  const { data: routes, isLoading } = useQuery<Route[]>({\n    queryKey: ['routes'],\n    queryFn: async () => {\n      const response = await client.get('/routes')\n      return response.data\n    }\n  })\n\n  const sendMutation = useMutation({\n    mutationFn: async (data: SendFormData) => {\n      return await client.post('/climbs', data)\n    },\n    onSuccess: () => {\n      // Reset form and show success message\n      setFormData({\n        route_id: 0,\n        tries: 1,\n        status: true,\n        rating: 3,\n        notes: ''\n      })\n    }\n  })\n\n  // Points calculation function\n  const calculatePoints = (grade: string, rating: number, status: boolean, tries: number) => {\n    if (!grade) return 0;\n    const [_, mainGrade, subGrade] = grade.match(/5\\.(\\d+)([a-d])?/) || [null, '0', ''];\n\n    const basePoints: Record<string, number> = {\n      '5': 50, '6': 60, '7': 70, '8': 80, '9': 100, '10': 150,\n      '11': 200, '12': 300, '13': 400, '14': 500, '15': 600\n    }\n\n    const subGradeMultiplier: Record<string, number> = {\n      'a': 1, 'b': 1.1, 'c': 1.2, 'd': 1.3\n    }\n\n    const base = (basePoints[mainGrade] || 0) * (subGradeMultiplier[subGrade] || 1);\n    const starMultiplier = Math.max(0.1, rating / 3);\n    const statusMultiplier = status ? 1 : 0.5;\n    const triesMultiplier = Math.max(0.1, 1 / Math.sqrt(tries));\n\n    return Math.round(base * starMultiplier * statusMultiplier * triesMultiplier);\n  }\n\n  if (isLoading) {\n    return <LoadingSpinner />\n  }\n\n  const selectedRoute = routes?.find(r => r.id === formData.route_id);\n  const points = selectedRoute \n    ? calculatePoints(selectedRoute.grade, formData.rating, formData.status, formData.tries)\n    : 0;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"card\">\n        <div className=\"card-body p-0\">\n          <form onSubmit={(e) => {\n            e.preventDefault()\n            sendMutation.mutate(formData)\n          }} className=\"w-100\">\n            <table className=\"table table-form w-100\">\n              <tbody>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Route</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <select \n                      className=\"form-select form-select-lg custom-select\"\n                      value={formData.route_id || ''}\n                      onChange={(e) => setFormData(prev => ({ ...prev, route_id: Number(e.target.value) }))}\n                      required\n                    >\n                      <option value=\"\" disabled>Select a route</option>\n                      {routes?.map(route => (\n                        <option \n                          key={route.id} \n                          value={route.id}\n                          className=\"route-option\"\n                        >\n                          <span \n                            className=\"color-dot\" \n                            style={{ backgroundColor: colorToHex[route.color] || '#FFFFFF' }}\n                          />\n                          {route.wall_sector} - {route.anchor_number} - {route.color} {route.grade}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Tries</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <input \n                        type=\"range\"\n                        min=\"1\"\n                        max=\"10\"\n                        value={formData.tries}\n                        onChange={(e) => setFormData(prev => ({ ...prev, tries: Number(e.target.value) }))}\n                        className=\"form-range\"\n                      />\n                      <span className=\"text-white\">{formData.tries}</span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Status</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"form-check form-switch\">\n                      <input \n                        className=\"form-check-input custom-switch\"\n                        type=\"checkbox\"\n                        role=\"switch\"\n                        checked={formData.status}\n                        onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.checked }))}\n                      />\n                      <label className=\"form-check-label\">\n                        {formData.status ? 'Sent' : 'Attempted'}\n                      </label>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label required-field\">Stars</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <div className=\"rating-container\">\n                      <div className=\"rating\">\n                        {[1, 2, 3, 4, 5].map((star) => (\n                          <i\n                            key={star}\n                            className={`rating-star bi bi-star-fill ${star <= formData.rating ? 'active' : ''}`}\n                            onClick={() => setFormData(prev => ({ ...prev, rating: star }))}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"form-label-cell\">\n                    <label className=\"form-label\">Notes</label>\n                  </td>\n                  <td className=\"form-input-cell\">\n                    <textarea \n                      className=\"form-control form-control-lg\"\n                      rows={3}\n                      value={formData.notes}\n                      onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"px-3 pb-3 w-100\">\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary btn-lg w-100\"\n                disabled={sendMutation.isPending}\n              >\n                {sendMutation.isPending ? 'Sending...' : formData.status ? 'Send' : 'Log'}\n              </button>\n              <div className=\"text-white mt-3 text-center fs-6\">\n                Points: {points}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sends"],"names":["useState","jsx","jsxs"],"mappings":"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"}