{"version":3,"file":"Feedback-BIsLD-hc.js","sources":["../../src/pages/Feedback.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport client from '../api/client';\n\ninterface FeedbackItem {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  screenshot_url?: string;\n  created_at: string;\n  user: {\n    username: string;\n  };\n}\n\ninterface FeedbackForm {\n  title: string;\n  description: string;\n  category: string;\n  screenshot?: File;\n}\n\nconst categories = [\n  'Bug Report',\n  'Feature Request',\n  'User Experience',\n  'Performance Issue',\n  'Other'\n];\n\nconst Feedback: React.FC = () => {\n  const [sort, setSort] = useState<'new' | 'top'>('new');\n  const [form, setForm] = useState<FeedbackForm>({\n    title: '',\n    description: '',\n    category: '',\n  });\n\n  const { data: feedbackItems, refetch } = useQuery<FeedbackItem[]>({\n    queryKey: ['feedback', sort],\n    queryFn: async () => {\n      const response = await client.get(`/api/feedback?sort=${sort}`);\n      return response.data;\n    }\n  });\n\n  const submitFeedback = useMutation({\n    mutationFn: async (formData: FormData) => {\n      return await client.post('/api/feedback', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n    },\n    onSuccess: () => {\n      setForm({\n        title: '',\n        description: '',\n        category: '',\n      });\n      refetch();\n    }\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', form.title);\n    formData.append('description', form.description);\n    formData.append('category', form.category);\n    if (form.screenshot) {\n      formData.append('screenshot', form.screenshot);\n    }\n    submitFeedback.mutate(formData);\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setForm(prev => ({ ...prev, screenshot: file }));\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-md-4 mb-4\">\n        <div className=\"card bg-dark\">\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Short, descriptive title\"\n                  required\n                  value={form.title}\n                  onChange={e => setForm(prev => ({ ...prev, title: e.target.value }))}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  placeholder=\"Detailed description of your feedback\"\n                  required\n                  value={form.description}\n                  onChange={e => setForm(prev => ({ ...prev, description: e.target.value }))}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label required-field\">Category</label>\n                <select\n                  className=\"form-select\"\n                  required\n                  value={form.category}\n                  onChange={e => setForm(prev => ({ ...prev, category: e.target.value }))}\n                >\n                  <option value=\"\">Select a category</option>\n                  {categories.map(category => (\n                    <option key={category} value={category}>\n                      {category}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Screenshot</label>\n                <input\n                  type=\"file\"\n                  className=\"form-control\"\n                  accept=\"image/*\"\n                  onChange={handleFileChange}\n                />\n              </div>\n              <button \n                type=\"submit\" \n                className=\"btn bg-solo-purple text-white w-100\"\n                disabled={submitFeedback.isPending}\n              >\n                {submitFeedback.isPending ? 'Submitting...' : 'Submit'}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-4\">\n        <div className=\"card bg-dark\">\n          <div className=\"card-header\">\n            <h4 className=\"card-title mb-0\">Community Feedback</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"btn-group mb-3 w-100\">\n              <button\n                className={`btn btn-outline-secondary ${sort === 'new' ? 'active' : ''}`}\n                onClick={() => setSort('new')}\n              >\n                Latest\n              </button>\n              <button\n                className={`btn btn-outline-secondary ${sort === 'top' ? 'active' : ''}`}\n                onClick={() => setSort('top')}\n              >\n                Top\n              </button>\n            </div>\n\n            {feedbackItems?.map(item => (\n              <div key={item.id} className=\"feedback-item mb-3\">\n                <h6>{item.title}</h6>\n                <p className=\"mb-1\">{item.description}</p>\n                <small className=\"text-muted\">\n                  By @{item.user.username} on {new Date(item.created_at).toLocaleDateString()}\n                </small>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n"],"names":["useState","jsxs","jsx"],"mappings":"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"}