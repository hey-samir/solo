modules = ["python-3.11", "postgresql-16", "nodejs-20"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "cloudrun"
run = ["sh", "-c", "NODE_ENV=production npx vite build && node src/server/server.js"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Database Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

    set -e
    echo \"Running database migrations...\"
    npx drizzle-kit generate:pg
    tsx src/server/db/migrate.ts
    echo \"Migrations completed\"
    """

[[workflows.workflow]]
name = "Build"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

    set -e
    echo \"Starting build process...\"
    # Clean build directories
    rm -rf dist/client
    mkdir -p dist/client
    # Build frontend
    NODE_ENV=production npx vite build
    echo \"Build completed successfully\"
    """

[[workflows.workflow]]
name = "Project"
author = "agent"
mode = "parallel"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Seed Test Data"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Database Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Build"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Production"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Staging"

[[workflows.workflow]]
name = "Seed Test Data"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=development tsx src/server/db/seed.ts"

[[workflows.workflow]]
name = "Production"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

    set -e
    echo \"Starting production server...\"
    # Clean and prepare build directory
    rm -rf dist/client/production
    mkdir -p dist/client/production
    # Build frontend with production mode
    NODE_ENV=production npx vite build --mode production
    # Start server
    NODE_ENV=production tsx src/server/server.ts
    """
waitForPort = 3000

[[workflows.workflow]]
name = "Staging"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

    set -e
    echo \"Starting staging server...\"
    # Clean and prepare build directory
    rm -rf dist/client/staging
    mkdir -p dist/client/staging
    # Build frontend with staging mode
    NODE_ENV=staging npx vite build --mode staging
    # Start server
    NODE_ENV=staging tsx src/server/server.ts
    """
waitForPort = 5000

[[ports]]
localPort = 80
externalPort = 3000

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 3001
externalPort = 3001

[[ports]]
localPort = 3002
externalPort = 3002

[[ports]]
localPort = 3003
externalPort = 3003

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5001

[[ports]]
localPort = 5002
externalPort = 4200

[auth]
pageEnabled = false
buttonEnabled = false
