modules = ["python-3.11", "postgresql-16", "nodejs-20"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "cloudrun"
run = ["sh", "-c", "NODE_ENV=production npx vite build && node src/server/server.js"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Database Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx drizzle-kit generate:pg && tsx src/server/db/migrate.ts"

[[workflows.workflow]]
name = "Build"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

set -e
echo \"Starting build process...\"

# Clean dist directory
rm -rf dist
mkdir -p dist/client dist/server

# Build client using vite
echo \"Building client...\"
NODE_ENV=staging npx vite build

# Copy server JavaScript files
echo \"Copying server files...\"
cp -r src/server/*.js dist/server/
mkdir -p dist/server/routes dist/server/middleware dist/server/deployment

# Copy additional server files
cp -r src/server/routes/*.js dist/server/routes/ 2>/dev/null || true
cp -r src/server/middleware/*.js dist/server/middleware/ 2>/dev/null || true
cp -r src/server/deployment/*.js dist/server/deployment/ 2>/dev/null || true

# Copy environment-specific files
echo \"Copying configuration files...\"
cp .env.staging dist/server/.env 2>/dev/null || true

echo \"Verifying build artifacts...\"
if [ ! -f \"dist/server/server.js\" ]; then
    echo \"Error: server.js not found\"
    echo \"Contents of dist/server:\"
    ls -la dist/server/
    exit 1
fi

echo \"Build completed successfully\"
"""

[[workflows.workflow]]
name = "Project"
author = "agent"
mode = "parallel"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Seed Test Data"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Database Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Build"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Staging"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Staging Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Express Server"

[[workflows.workflow]]
name = "Seed Test Data"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=development tsx src/server/db/seed.ts"

[[workflows.workflow]]
name = "Staging"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

    set -e
    echo \"Building client...\"
    NODE_ENV=staging npx vite build
    echo \"Starting staging server...\"
    NODE_ENV=staging PORT=5000 node src/server/server.js
    """
waitForPort = 5000

[[workflows.workflow]]
name = "Staging Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

set -e
echo \"Starting staging server...\"

# Start the server with the correct port
NODE_ENV=staging PORT=5001 node src/server/server.js
"""
waitForPort = 5001

[[workflows.workflow]]
name = "Express Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """

set -e
echo \"Starting Express server...\"
NODE_ENV=development node src/server/server.js
"""
waitForPort = 3000

[[ports]]
localPort = 80
externalPort = 3000

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 3001
externalPort = 3001

[[ports]]
localPort = 3002
externalPort = 3002

[[ports]]
localPort = 3003
externalPort = 3003

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5001

[[ports]]
localPort = 5002
externalPort = 4200

[auth]
pageEnabled = false
buttonEnabled = false
