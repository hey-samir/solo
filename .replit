modules = ["python-3.11", "postgresql-16", "nodejs-20"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "cloudrun"
run = ["sh", "-c", "NODE_ENV=production npx vite build && node src/server/server.js"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Database Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx drizzle-kit generate:pg && tsx src/server/db/migrate.ts"

[[workflows.workflow]]
name = "Build"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=production npx concurrently \"npx vite build\" \"npx tsc --project tsconfig.server.json && cp -r src/server/routes dist/server/ && cp -r src/server/middleware dist/server/ && cp -r src/server/db dist/server/ && cp -r src/server/types dist/server/\""

[[workflows.workflow]]
name = "Project"
author = "agent"
mode = "parallel"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Seed Test Data"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Database Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Build"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Staging Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Development Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Production Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Build Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Production Deploy"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Full Production Deploy"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Blue-Green Deploy"

[[workflows.workflow]]
name = "Seed Test Data"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=development tsx src/server/db/seed.ts"

[[workflows.workflow]]
name = "Staging Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=staging PORT=5000 tsx src/server/server.ts"
waitForPort = 5000

[[workflows.workflow]]
name = "Development Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=development npx concurrently \"npx vite --port 3000\" \"PORT=3003 tsx src/server/server.ts\""
waitForPort = 3000

[[workflows.workflow]]
name = "Production Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=production tsx src/server/server.ts"
waitForPort = 80

[[workflows.workflow]]
name = "Build Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsc --project tsconfig.server.json && cp -r src/server/routes dist/server/ && cp -r src/server/middleware dist/server/"

[[workflows.workflow]]
name = "Production Deploy"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=production npx concurrently \"npx vite build\" \"npx tsc --project tsconfig.server.json && cp -r src/server/routes dist/server/ && cp -r src/server/middleware dist/server/ && cp -r src/server/db dist/server/ && cp -r src/server/types dist/server/\" && NODE_ENV=production PORT=80 node dist/server/server.js"
waitForPort = 80

[[workflows.workflow]]
name = "Full Production Deploy"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'NODE_ENV=production npx concurrently \n        "npx vite build" \n        "npx tsc --project tsconfig.server.json && cp -r src/server/routes dist/server/ && cp -r src/server/middleware dist/server/ && cp -r src/server/db dist/server/" && \n        NODE_ENV=production PORT=80 node dist/server/server.js'
waitForPort = 80

[[workflows.workflow]]
name = "Blue-Green Deploy"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=production tsx src/server/deployment/deploy.ts"

[[ports]]
localPort = 80
externalPort = 3000

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 3001
externalPort = 3001

[[ports]]
localPort = 3002
externalPort = 3002

[[ports]]
localPort = 3003
externalPort = 3003

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5001

[[ports]]
localPort = 5002
externalPort = 4200

[auth]
pageEnabled = false
buttonEnabled = false
